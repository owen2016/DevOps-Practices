pipeline {
    agent {
        docker {
            image 'node:alpine'
            args '-p 3000:3000 -p 5000:5000'
        }
    }
    options
    {
        // retry(2)  -整个pipeline retry 次数，也可放于stage块中
        buildDiscarder(logRotator(numToKeepStr: '3')) //保存最近构建的数量
        disableConcurrentBuilds() //禁止pipeline 同时执行，避免同时访问共享资源
    }
    environment {
        CI = 'true'       
    }
    stages {
        stage('Build') {
            steps {

                echo 'Building...'
                sh 'npm config set registry http://registry.npm.taobao.org'                
                sh 'npm install 2>&1 | tee ./1.txt'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                sh 'chmod -R 777 *'
                sh './jenkins/scripts/test.sh'
            }
        }
        stage('Deliver for development') {
            when {
                branch 'development'
            }
            steps {
                sh './jenkins/scripts/deliver-for-development.sh'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }
        stage('Deploy for production') {
            when {
                branch 'production'
            }
            steps {
                sh './jenkins/scripts/deploy-for-production.sh'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }
    }
    post {
            failure {
                script {
                    echo "The pipeline failed ..."

                    // mail to: 'XXXX@devops.com.cn', subject: 'The pipeline failed ...'
                }
            }

            success 
            {
                echo "The pipeline success ..."
            }

            always
            {
                cleanWs() //清理工作空间
            }
    }
    
}
